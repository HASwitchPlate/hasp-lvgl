name: Build branch

on:
  release:
    types: [created]
  push:
    branches:
      - master
    paths-ignore:
      - "**.md"
      - "**.yml"
      - "**.yaml"
  workflow_dispatch:

jobs:
  build_esp32:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        environment:
          - out: sunton
            env: "esp32-2432s028r_4MB -e esp32-3248s035c_4MB -e esp32-3248s035r_4MB -e sunton-4827s043c_16MB -e sunton-8048s043c_16MB -e sunton-8048s050c_16MB -e sunton-8048s070c_16MB"

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "true"
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Cache PlatformIO
        uses: actions/cache@v3
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio
      - name: Install Setuptools
        run: |
          pip install --upgrade setuptools
      - name: Enable ESP32 platforms from platformio_override-template.ini
        run: |
          sed 's/; user_setups\/esp32/user_setups\/esp32/g' platformio_override-template.ini > platformio_override.ini
      - name: List all files in current folder
        run: |
          ls -la
      - name: Cat platformio_override.ini
        run: |
          cat platformio_override.ini
      - name: Run PlatformIO
        run: pio run -e ${{ matrix.environment.env }}
      - name: Upload output file
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.environment.out }}
          path: build_output/firmware/*.bin
      - name: Create release and upload firmware
        if: github.ref != 'refs/heads/master'
        run: |
          set -x
          assets=()
          for asset in build_output/firmware/*.bin; do
            assets+=("-a" "$asset")
          done
          tag_name="${GITHUB_REF##*/}"
          hub release edit "${assets[@]}" -m "$tag_name" "$tag_name"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #- name: Create release and upload firmware
    #  run: |
    #    set -x
    #    assets=()
    #    for asset in build_output/firmware/*.bin; do
    #      assets+=("-a" "$asset")
    #    done
    #    tag_name="${GITHUB_REF##*/}"
    #    hub release create "${assets[@]}" -m "$tag_name" "$tag_name"
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  linux_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "true"
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Cache PlatformIO
        uses: actions/cache@v3
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio
      - name: Enable Linux platform from platformio_override.ini
        run: |
          sed 's/; user_setups\/linux/user_setups\/linux/g' platformio_override-template.ini > platformio_override.ini
          mkdir -p .pio/libdeps/linux_sdl_64bits/paho/src
      - name: Install SDL2 library
        run: |
          sudo apt-get update
          sudo apt-get install libsdl2-dev
      - name: List all files in current folder
        run: |
          ls -la
      - name: Cat platformio_override.ini
        run: |
          cat platformio_override.ini
      - name: Enable Linux platform from platformio_override.ini
        run: |
          sed -i 's/; user_setups\/linux/user_setups\/linux/g' platformio_override.ini
          mkdir -p .pio/libdeps/linux_sdl_64bits/paho/src
      - name: Install SDL2 library
        run: |
          sudo apt-get update
          sudo apt-get install libsdl2-dev
      - name: Run PlatformIO
        run: pio run -e linux_sdl_64bits
